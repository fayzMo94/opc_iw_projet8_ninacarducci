(function ($) {
  $.fn.mauGallery = function (options) {
    options = $.extend($.fn.mauGallery.defaults, options);
    const tagsCollection = [];
    return this.each(function () {
      const $this = $(this);
      $.fn.mauGallery.methods.createRowWrapper($this);
      if (options.lightBox)
        $.fn.mauGallery.methods.createLightBox(
          $this,
          options.lightboxId,
          options.navigation
        );
      $.fn.mauGallery.listeners(options);
      $this.children(".gallery-item").each(function () {
        const $item = $(this);
        $.fn.mauGallery.methods.responsiveImageItem($item);
        $.fn.mauGallery.methods.moveItemInRowWrapper($item);
        $.fn.mauGallery.methods.wrapItemInColumn($item, options.columns);
        const theTag = $item.data("gallery-tag");
        if (
          options.showTags &&
          theTag !== undefined &&
          !tagsCollection.includes(theTag)
        )
          tagsCollection.push(theTag);
      });
      if (options.showTags)
        $.fn.mauGallery.methods.showItemTags(
          $this,
          options.tagsPosition,
          tagsCollection
        );
      $this.fadeIn(500);
    });
  };

  $.fn.mauGallery.defaults = {
    columns: 3,
    lightBox: true,
    lightboxId: null,
    showTags: true,
    tagsPosition: "bottom",
    navigation: true,
  };

  $.fn.mauGallery.listeners = function (options) {
    $(".gallery-item").on("click", function () {
      if (options.lightBox && $(this).prop("tagName") === "IMG")
        $.fn.mauGallery.methods.openLightBox($(this), options.lightboxId);
    });
    $(".gallery")
      .on("click", ".nav-link", $.fn.mauGallery.methods.filterByTag)
      .on("click", ".mg-prev", () =>
        $.fn.mauGallery.methods.prevImage(options.lightboxId)
      )
      .on("click", ".mg-next", () =>
        $.fn.mauGallery.methods.nextImage(options.lightboxId)
      );
  };

  $.fn.mauGallery.methods = {
    createRowWrapper(element) {
      if (!element.children().first().hasClass("row"))
        element.append('<div class="gallery-items-row row"></div>');
    },
    wrapItemInColumn(element, columns) {
      const getColumnClass = (size) => (size ? ` col-${size}` : "");
      let columnClasses = "";
      if (typeof columns === "number") {
        columnClasses = `col-${Math.ceil(12 / columns)}`;
      } else if (typeof columns === "object") {
        columnClasses = `${getColumnClass(columns.xs)}${getColumnClass(
          columns.sm
        )}${getColumnClass(columns.md)}${getColumnClass(
          columns.lg
        )}${getColumnClass(columns.xl)}`;
      } else {
        console.error(`Invalid column type: ${typeof columns}`);
        return;
      }
      element.wrap(`<div class='item-column mb-4 ${columnClasses}'></div>`);
    },
    moveItemInRowWrapper(element) {
      element.appendTo(".gallery-items-row");
    },
    responsiveImageItem(element) {
      if (element.prop("tagName") === "IMG") element.addClass("img-fluid");
    },
    openLightBox(element, lightboxId) {
      $(`#${lightboxId}`)
        .find(".lightboxImage")
        .attr("src", element.attr("src"))
        .end()
        .modal("toggle");
    },
    prevImage(lightboxId) {
      this.switchImage(-1, lightboxId);
    },
    nextImage(lightboxId) {
      this.switchImage(1, lightboxId);
    },
    switchImage(direction, lightboxId) {
      const currentSrc = $(`#${lightboxId}`).find(".lightboxImage").attr("src");
      let activeImage = $(`img.gallery-item[src='${currentSrc}']`);
      const activeTag = $(".tags-bar span.active-tag").data("images-toggle");
      const imagesCollection =
        activeTag === "all"
          ? $(".gallery-item")
          : $(`.gallery-item[data-gallery-tag='${activeTag}']`);
      let index = imagesCollection.index(activeImage) + direction;
      if (index < 0) index = imagesCollection.length - 1;
      else if (index >= imagesCollection.length) index = 0;
      $(".lightboxImage").attr("src", imagesCollection.eq(index).attr("src"));
    },
    createLightBox(gallery, lightboxId = "galleryLightbox", navigation) {
      gallery.append(`<div class="modal fade" id="${lightboxId}" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-body">
          ${
            navigation
              ? '<div class="mg-prev" style="cursor:pointer;position:absolute;top:50%;left:-15px;background:white;"><</div>'
              : ""
          }
          <img class="lightboxImage img-fluid" alt="Image content in modal" />
          ${
            navigation
              ? '<div class="mg-next" style="cursor:pointer;position:absolute;top:50%;right:-15px;background:white;">></div>'
              : ""
          }
        </div></div></div></div>`);
    },
    showItemTags(gallery, position, tags) {
      const tagsRow = `<ul class="my-4 tags-bar nav nav-pills"><li class="nav-item"><span class="nav-link active active-tag" data-images-toggle="all">Tous</span></li>${tags
        .map(
          (tag) =>
            `<li class="nav-item"><span class="nav-link" data-images-toggle="${tag}">${tag}</span></li>`
        )
        .join("")}</ul>`;
      if (position === "bottom") gallery.append(tagsRow);
      else if (position === "top") gallery.prepend(tagsRow);
      else console.error(`Unknown tags position: ${position}`);
    },
    filterByTag() {
      if ($(this).hasClass("active-tag")) return;
      $(".active.active-tag").removeClass("active active-tag");
      $(this).addClass("active-tag active");
      const tag = $(this).data("images-toggle");
      $(".gallery-item").each(function () {
        const $column = $(this).parents(".item-column");
        $column.hide();
        if (tag === "all" || $(this).data("gallery-tag") === tag)
          $column.show(300);
      });
    },
  };
})(jQuery);
